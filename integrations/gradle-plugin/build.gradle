apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: "signing"
apply plugin: "maven"

repositories {
    google()
    jcenter()
}

artifacts {
    archives jar
//    archives sourcesJar
}

def findAndroidHome() {
    String androidHome = System.getenv("ANDROID_HOME")
    if (androidHome == null) {
        androidHome = System.getenv("ANDROID_SDK_ROOT")
    }
    if (androidHome == null) {
        def properties = new Properties()
        def localPropsFile = new File(rootProject.rootDir, "local.properties")
        try {
            properties.load(localPropsFile.newInputStream())
            androidHome = properties.get("sdk.dir")
        } catch (ignored) {
        }
    }
    if (androidHome == null) {
        throw new RuntimeException("Couldn't find Android home in \$ANDROID_HOME," +
                " \$ANDROID_SDK_ROOT, or local.properties")
    }
    return androidHome
}

gradlePlugin {
    plugins {
        robolectric {
            id = "org.robolectric"
            implementationClass = "org.robolectric.gradleplugin.GradlePlugin"
        }
    }
}

task writeCoordinates() {
    File outDir = project.sourceSets['main'].output.resourcesDir
    outDir.mkdirs()
    File outFile = new File(outDir, 'robolectric-version.txt')
    outFile.write("${project.version}")
}

task writeDefaultSdks() {
    File outDir = project.sourceSets['main'].output.resourcesDir
    outDir.mkdirs()
    File outFile = new File(outDir, 'org.robolectric.GradlePlugin.sdks.properties')
    def props = new Properties()
    rootProject.allSdks.forEach { sdk ->
        def sdkInfo = "$sdk.coordinates,$sdk."
        props.setProperty(sdk.apiLevel.toString(), sdkInfo)
    }
    outFile.withPrintWriter { out -> props.store(out, null) }
}

processResources {
    dependsOn(writeCoordinates)
    dependsOn(writeDefaultSdks)
}

configurations {
    robolectricJars
    sdk28
}

test {
    dependsOn(":robolectric:jar")
}

dependencies {
    implementation 'com.android.tools.build:gradle:3.5.3'
    implementation gradleApi()
    implementation localGroovy()

    // Testing dependencies
    testImplementation "junit:junit:4.13"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation "com.google.testing.compile:compile-testing:0.18"

    robolectricJars project(":robolectric")
    sdk28 "org.robolectric:android-all:9-robolectric-4913185-2"
}

// Pass in :robolectric's and an Android SDK classpath so our testProject can use them.
afterEvaluate {
    test {
        environment([
                "gradle-robolectric-plugin.classpath": configurations['robolectricJars'].files.join(":"),
                "gradle-robolectric-plugin.sdkPath": configurations['sdk28'].files.join(":"),
                "ANDROID_SDK_ROOT": findAndroidHome()
        ])
    }
}
